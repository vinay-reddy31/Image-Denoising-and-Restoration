# -*- coding: utf-8 -*-
"""salt_contraharmonic_mean.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1anBvXOxqfetddDttcvYd6POu7pOSlEcs
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt

def contraharmonic_mean_filter_salt(image):
    Q = -1.5
    numerator = np.power(image, Q + 1)
    denominator = np.power(image, Q)

    kernel = np.ones((3, 3), dtype=np.float32)
    numerator_filtered = cv2.filter2D(numerator, -1, kernel)
    denominator_filtered = cv2.filter2D(denominator, -1, kernel)

    result = numerator_filtered / (denominator_filtered + 1e-10)
    result = np.clip(result, 0, 255)
    return result.astype(np.uint8)

# Path to image
image_path = '/content/drive/MyDrive/imageProcessing-nitw/Fig0508(b)(circuit-board-salt-prob-pt1).tif'

# Read image
image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

# Check if image is loaded
if image is None:
    print(f"Failed to load image from {image_path}")
else:
    # Apply contraharmonic mean filter
    filtered_image = contraharmonic_mean_filter_salt(image)

    # Display images
    plt.figure(figsize=(12, 6))

    plt.subplot(1, 2, 1)
    plt.imshow(image, cmap='gray')
    plt.title('Original Salt Image')
    plt.axis('off')

    plt.subplot(1, 2, 2)
    plt.imshow(filtered_image, cmap='gray')
    plt.title('Filtered Salt Image (Q = -1.5)')
    plt.axis('off')

    plt.tight_layout()
    plt.show()

